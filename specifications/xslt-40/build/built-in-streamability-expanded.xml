<?xml version="1.0" encoding="UTF-8"?>
<!--DO NOT EDIT: GENERATED BY function-streamability.xsl-->
<!--DO NOT EDIT: GENERATED BY function-streamability.xsl-->
<!--DO NOT EDIT: GENERATED BY function-streamability.xsl-->
<!--DO NOT EDIT: GENERATED BY function-streamability.xsl-->
<!--DO NOT EDIT: GENERATED BY function-streamability.xsl-->
<!--DO NOT EDIT: GENERATED BY function-streamability.xsl-->
<!--DO NOT EDIT: GENERATED BY function-streamability.xsl-->
<!--DO NOT EDIT: GENERATED BY function-streamability.xsl-->
<!--DO NOT EDIT: GENERATED BY function-streamability.xsl-->
<!--DO NOT EDIT: GENERATED BY function-streamability.xsl-->
<!--DO NOT EDIT: GENERATED BY function-streamability.xsl-->
<!--DO NOT EDIT: GENERATED BY function-streamability.xsl-->
<!--DO NOT EDIT: GENERATED BY function-streamability.xsl-->
<!--DO NOT EDIT: GENERATED BY function-streamability.xsl-->
<!--DO NOT EDIT: GENERATED BY function-streamability.xsl-->
<!--DO NOT EDIT: GENERATED BY function-streamability.xsl-->
<!--DO NOT EDIT: GENERATED BY function-streamability.xsl-->
<!--DO NOT EDIT: GENERATED BY function-streamability.xsl-->
<!--DO NOT EDIT: GENERATED BY function-streamability.xsl-->
<!--DO NOT EDIT: GENERATED BY function-streamability.xsl-->
<ulist>
   <item>
      <p>
         <code>array:append(I, N)</code>
      </p>
   </item>
   <item>
      <p>
         <code>array:filter(I, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>array:flatten(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>array:fold-left(I, N, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>array:fold-right(I, N, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>array:for-each(I, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>array:for-each-pair(I, I, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>array:from-sequence(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>array:from-sequence(I, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>array:get(I, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>array:head(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>array:insert-before(I, A, N)</code>
      </p>
   </item>
   <item>
      <p>
         <code>array:join(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>array:put(I, I, N)</code>
      </p>
   </item>
   <item>
      <p>
         <code>array:remove(I, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>array:reverse(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>array:size(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>array:slice(I, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>array:sort(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>array:sort(I, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>array:sort(I, A, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>array:subarray(I, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>array:subarray(I, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>array:tail(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:abs(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:accumulator-after</code> – See <specref ref="streamability-fn-accumulator-after"/>
      </p>
   </item>
   <item>
      <p>
         <code>fn:accumulator-before</code> – See <specref ref="streamability-fn-accumulator-before"/>
      </p>
   </item>
   <item>
      <p>
         <code>fn:adjust-date-to-timezone(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:adjust-date-to-timezone(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:adjust-dateTime-to-timezone(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:adjust-dateTime-to-timezone(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:adjust-time-to-timezone(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:adjust-time-to-timezone(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:all(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:analyze-string(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:analyze-string(A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:apply(A, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:available-environment-variables()</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:available-system-properties()</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:avg(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:base-uri()</code> – Equivalent to <code>fn:base-uri(.)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:base-uri(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:boolean(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:ceiling(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:characters(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:codepoint-equal(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:codepoints-to-string(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:collation-key(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:collation-key(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:collection()</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:collection(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:compare(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:compare(A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:concat(A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:contains(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:contains(A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:contains-token(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:contains-token(A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:copy-of()</code> – Equivalent to <code>fn:copy-of(.)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:copy-of(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:count(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:current</code> – See <specref ref="streamability-fn-current"/>
      </p>
   </item>
   <item>
      <p>
         <code>fn:current-date()</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:current-dateTime()</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:current-group</code> – See <specref ref="streamability-fn-current-group"/>
      </p>
   </item>
   <item>
      <p>
         <code>fn:current-grouping-key</code> – See <specref ref="streamability-fn-current-grouping-key"/>
      </p>
   </item>
   <item>
      <p>
         <code>fn:current-merge-group</code> – See <specref ref="streamability-fn-current-merge-group"/>
      </p>
   </item>
   <item>
      <p>
         <code>fn:current-merge-key</code> – See <specref ref="streamability-fn-current-merge-key"/>
      </p>
   </item>
   <item>
      <p>
         <code>fn:current-mode()</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:current-output-uri()</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:current-time()</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:data()</code> – Equivalent to <code>fn:data(.)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:data(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:dateTime(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:day-from-date(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:day-from-dateTime(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:days-from-duration(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:deep-equal(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:deep-equal(A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:deep-equal(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:deep-equal(A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:default-collation()</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:default-language()</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:differences(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:differences(A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:differences(A, A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:distinct-values(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:distinct-values(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:doc(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:doc-available(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:document(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:document(A, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:document-uri()</code> – Equivalent to <code>fn:document-uri(.)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:document-uri(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:element-available(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:element-with-id(x)</code> – Equivalent to <code>fn:element-with-id(x, .)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:element-with-id(A, N)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:empty(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:encode-for-uri(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:ends-with(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:ends-with(A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:environment-variable(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:error()</code> – Equivalent to <code>fn:error(x, x, x, x, x, .)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:error(x)</code> – Equivalent to <code>fn:error(x, x, x, x, .)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:error(x, x)</code> – Equivalent to <code>fn:error(x, x, .)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:error(A, A, N)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:escape-html-uri(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:exactly-one(T)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:exists(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:false()</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:filter(N, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:floor(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:fold-left(N, A, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:fold-right</code> – See <specref ref="streamability-fn-fold-right"/>
      </p>
   </item>
   <item>
      <p>
         <code>fn:for-each(N, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:for-each-pair(N, N, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:format-date(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:format-date(A, A, A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:format-dateTime(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:format-dateTime(A, A, A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:format-integer(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:format-integer(A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:format-number(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:format-number(A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:format-time(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:format-time(A, A, A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:function-arity(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:function-available(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:function-available(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:function-lookup</code> – See <specref ref="streamability-fn-function-lookup"/>
      </p>
   </item>
   <item>
      <p>
         <code>fn:function-name(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:generate-id()</code> – Equivalent to <code>fn:generate-id(.)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:generate-id(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:has-children()</code> – Equivalent to <code>fn:has-children(.)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:has-children(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:head(T)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:highest(N)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:highest(N, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:highest(N, A, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:hours-from-dateTime(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:hours-from-duration(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:hours-from-time(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:id(x)</code> – Equivalent to <code>fn:id(x, .)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:id(A, N)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:identity(N)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:idref(x)</code> – Equivalent to <code>fn:idref(x, .)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:idref(A, N)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:implicit-timezone()</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:in-scope-namespaces(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:in-scope-prefixes(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:index-of(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:index-of(A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:index-where(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:innermost</code> – See <specref ref="streamability-fn-innermost"/>
      </p>
   </item>
   <item>
      <p>
         <code>fn:insert-before(T, A, T)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:iri-to-uri(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:is-NaN(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:items-after(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:items-before(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:items-from(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:items-until(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:json(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:json(A, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:json-doc(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:json-doc(A, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:json-to-xml(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:json-to-xml(A, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:key(x, x)</code> – Equivalent to <code>fn:key(x, x, /)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:key(A, A, N)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:lang(x)</code> – Equivalent to <code>fn:lang(x, .)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:lang(A, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:last</code> – See <specref ref="streamability-fn-last"/>
      </p>
   </item>
   <item>
      <p>
         <code>fn:load-xquery-module(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:load-xquery-module(A, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:local-name()</code> – Equivalent to <code>fn:local-name(.)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:local-name(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:local-name-from-QName(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:lower-case(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:lowest(N)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:lowest(N, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:lowest(N, A, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:matches(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:matches(A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:max(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:max(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:min(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:min(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:minutes-from-dateTime(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:minutes-from-duration(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:minutes-from-time(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:month-from-date(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:month-from-dateTime(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:months-from-duration(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:name()</code> – Equivalent to <code>fn:name(.)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:name(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:namespace-uri()</code> – Equivalent to <code>fn:namespace-uri(.)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:namespace-uri(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:namespace-uri-for-prefix(A, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:namespace-uri-from-QName(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:nilled()</code> – Equivalent to <code>fn:nilled(.)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:nilled(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:node-name()</code> – Equivalent to <code>fn:node-name(.)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:node-name(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:normalize-space()</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:normalize-space(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:normalize-unicode(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:normalize-unicode(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:not(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:number()</code> – Equivalent to <code>fn:number(.)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:number(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:one-or-more(T)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:outermost</code> – See <specref ref="streamability-fn-outermost"/>
      </p>
   </item>
   <item>
      <p>
         <code>fn:parse-ietf-date(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:parse-json(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:parse-json(A, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:parse-xml(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:parse-xml-fragment(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:path()</code> – Equivalent to <code>fn:path(.)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:path(N)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:position</code> – See <specref ref="streamability-fn-position"/>
      </p>
   </item>
   <item>
      <p>
         <code>fn:prefix-from-QName(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:QName(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:random-number-generator()</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:random-number-generator(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:regex-group(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:remove(T, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:replace(A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:replace(A, A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:replace-with(A, A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:replace-with(A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:replicate</code> – See <specref ref="streamability-fn-replicate"/>
      </p>
   </item>
   <item>
      <p>
         <code>fn:resolve-QName(A, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:resolve-uri(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:resolve-uri(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:reverse</code> – See <specref ref="streamability-fn-reverse"/>
      </p>
   </item>
   <item>
      <p>
         <code>fn:root</code> – See <specref ref="streamability-fn-root"/>
      </p>
   </item>
   <item>
      <p>
         <code>fn:round(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:round(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:round-half-to-even(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:round-half-to-even(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:seconds-from-dateTime(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:seconds-from-duration(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:seconds-from-time(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:serialize(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:serialize(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:slice(I, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:snapshot()</code> – Equivalent to <code>fn:snapshot(.)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:snapshot(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:some(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:sort(N)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:sort(N, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:sort(N, A, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:spread(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:spread(A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:stack-trace()</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:starts-with(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:starts-with(A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:static-base-uri()</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:stream-available(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:string()</code> – Equivalent to <code>fn:string(.)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:string(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:string-join(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:string-join(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:string-length()</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:string-length(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:string-to-codepoints(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:subsequence(T, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:subsequence(T, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:substring(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:substring(A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:substring-after(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:substring-after(A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:substring-before(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:substring-before(A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:sum(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:sum(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:system-property(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:tail(T)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:timezone-from-date(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:timezone-from-dateTime(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:timezone-from-time(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:tokenize(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:tokenize(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:tokenize(A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:trace(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:trace(T, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:transform(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:translate(A, A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:true()</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:type-available(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:uniform(N)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:uniform(N, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:unique(N)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:unique(N, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:unordered(T)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:unparsed-entity-public-id(x)</code> – Equivalent to <code>fn:unparsed-entity-public-id(x, /)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:unparsed-entity-public-id(A, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:unparsed-entity-uri(x)</code> – Equivalent to <code>fn:unparsed-entity-uri(x, /)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:unparsed-entity-uri(A, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:unparsed-text(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:unparsed-text(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:unparsed-text-available(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:unparsed-text-available(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:unparsed-text-lines(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:unparsed-text-lines(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:upper-case(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:uri-collection()</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:uri-collection(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:xml-to-json(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:xml-to-json(A, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:year-from-date(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:year-from-dateTime(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:years-from-duration(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>fn:zero-or-one(T)</code>
      </p>
   </item>
   <item>
      <p>
         <code>map:contains(I, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>map:entry(A, N)</code>
      </p>
   </item>
   <item>
      <p>
         <code>map:filter(I, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>map:find(I, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>map:for-each(I, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>map:get(I, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>map:group-by(N, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>map:keys(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>map:merge(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>map:merge(I, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>map:put(I, A, N)</code>
      </p>
   </item>
   <item>
      <p>
         <code>map:remove(I, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>map:replace(I, I, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>map:size(I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>map:substitute(I, I)</code>
      </p>
   </item>
   <item>
      <p>
         <code>math:acos(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>math:asin(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>math:atan(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>math:atan2(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>math:cos(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>math:exp(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>math:exp10(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>math:log(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>math:log10(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>math:pi()</code>
      </p>
   </item>
   <item>
      <p>
         <code>math:pow(A, A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>math:sin(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>math:sqrt(A)</code>
      </p>
   </item>
   <item>
      <p>
         <code>math:tan(A)</code>
      </p>
   </item>
</ulist>
